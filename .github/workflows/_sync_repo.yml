name: Sync Repository

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  sync_repo_1:
    name: Sync Repository 1
    runs-on: ubuntu-latest
    env:
      TARGET_REPO: ${{ vars.SYNC_REPO_TARGET_REPO_1 }}
      TARGET_SOURCE_BRANCH: main
      TARGET_RELEASE_BRANCH: v1
    steps:
      - name: Checkout Target
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TARGET_REPO }}
          path: 'target'
          ref: refs/heads/${{ env.TARGET_SOURCE_BRANCH }}
          ssh-key: ${{ secrets.SYNC_REPO_SSH_KEY_1 }}
      - name: Checkout Source
        uses: actions/checkout@v3
        with:
          path: 'source'
      - name: Print files and directories
        shell: bash
        run: tree -aI "\.git" "$(pwd)"
      - name: Sync files
        shell: bash
        run: |
          rsync --recursive --exclude=".git/*" "source/" "target"
      - name: Update Repo Name
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "pacroy/.github"
          replace: ${{ env.TARGET_REPO }}
          regex: false
          include: 'target/**'
      - name: Create Job Summary
        shell: bash
        working-directory: target
        run: |
          {
            git add .
            synced_files="$(git status --porcelain)"

            if [ -z "${synced_files}" ]; then
              echo ":smile: No change detected. Everything is already in sync."
            else
              echo ":sunglasses: The following changes have been made:"
              echo "\`\`\`console"
              echo "${synced_files}"
              echo "\`\`\`"
            fi
          } >> "$GITHUB_STEP_SUMMARY"
      - name: Commit to Source Branch
        id: commit
        shell: bash
        working-directory: target
        run: |
          git commit -m "[AUTO] Sync repository"
          if [ $? -eq 0 ]; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Push Source Branch
        if: ${{ steps.commit.outputs.result == 'true' && github.ref == 'refs/heads/main' }}
        shell: bash
        working-directory: target
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git push origin ${TARGET_SOURCE_BRANCH}
      - name: Merge to Release Branch
        id: merge
        shell: bash
        working-directory: target
        run: |
          git checkout -b ${TARGET_RELEASE_BRANCH}
          git pull origin ${TARGET_RELEASE_BRANCH}
          git merge ${TARGET_SOURCE_BRANCH}
      - name: Push Release Branch
        if: ${{ steps.merge.outputs.result == 'true' && github.ref == 'refs/heads/main' }}
        shell: bash
        working-directory: target
        run: |
          git push origin ${TARGET_RELEASE_BRANCH}
